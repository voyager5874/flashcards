$elementIsActive: #275EFE;
$elementIsActive-inner: #fff;
$elementIsFocus: 2px rgba(39, 94, 254, .3);
$elementBorder: #BBC1E1;
$elementBorder-hover: #275EFE;
$elementBackground: #fff;
$elementDisabled: #F6F8FF;
$elementDisabled-inner: #E1E6F9;

$elementHeight: 30px;
$switchWidth: calc(#{$elementHeight} * 2);
$switchHandleSize: $elementHeight - 6px;
$switchRadius: calc(#{$elementHeight} / 2);

.wrapper {
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  flex-direction: column;
  margin: 12px;
  padding: 0;
  width: 100%;
  max-width: 320px;
  position: relative;
  font-size: 14px;
  line-height: 21px;
  //display: inline-block;
  vertical-align: top;
  cursor: pointer;
  //margin-left: 4px;


  * {
    box-sizing: inherit;

    &:before,
    &:after {
      box-sizing: inherit;
    }
  }

  input {
    --active: #275EFE;
    --active-inner: #fff;
    --focus: 2px rgba(39, 94, 254, .3);
    --border: #BBC1E1;
    --border-hover: #275EFE;
    --background: #fff;
    --disabled: #F6F8FF;
    --disabled-inner: #E1E6F9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: $elementHeight;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background .3s, border-color .3s, box-shadow .2s;

    &:after {
      content: '';
      display: block;
      left: 0;
      top: 0;
      position: absolute;
      //the next line was giving an error "type mismatch", adding calc or just a pair of "()" helps. Seems to work
      //transition: transform calc(var(--d-t, .3s)) var(--d-t-e, ease), opacity var(--d-o, .2s);
      transition: transform (var(--d-t, .3s)) var(--d-t-e, ease), opacity var(--d-o, .2s);
    }

    &:checked {
      --b: var(--active);
      --bc: var(--active);
      --d-o: .3s;
      --d-t: 0.9s;
      --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
    }

    &:disabled {
      --b: var(--disabled);
      cursor: not-allowed;
      opacity: .9;

      &:checked {
        --b: var(--disabled-inner);
        --bc: var(--border);
      }
    }

    &:hover {
      &:not(:checked) {
        &:not(:disabled) {
          --bc: var(--border-hover);
        }
      }
    }

    &:focus {
      box-shadow: 0 0 0 var(--focus);
    }

    &:not(.switch) {
      width: $elementHeight;
      border-radius: calc(#{$elementHeight} /3);

      &:after {
        opacity: var(--o, 0);
        width: calc(#{$elementHeight} /4);
        height: calc(#{$elementHeight} /2);
        border: calc(#{$elementHeight} /10) solid var(--active-inner);
        border-top: 0;
        border-left: 0;
        left: calc(#{$elementHeight} /2 - 3px);
        top: calc(#{$elementHeight} /5);
        transform: rotate(var(--r, 20deg));
      }

      &:checked {
        --o: 1;
        --r: 43deg;
      }
    }

    &.switch {
      width: $switchWidth;
      border-radius: $switchRadius;

      &:after {
        left: 2px;
        top: 2px;
        border-radius: 50%;
        width: $switchHandleSize;
        height: $switchHandleSize;
        background: var(--ab, var(--border));
        transform: translateX(var(--x, 0));

      }

      &:checked {
        --ab: var(--active-inner);
        --x: calc(#{$switchWidth} - #{$switchHandleSize} - 6px);
      }

      &:disabled {
        &:not(:checked) {
          &:after {
            opacity: .6;
          }
        }
      }
    }
  }

}

